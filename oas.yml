openapi: 3.0.0

info:
  description: |
    You can find out more about Swagger at
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: "2.0.0"
  title: "flow API: pomodoro"
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

security:
  - cookieAuth: []

tags: []

paths:
  /start:
    post:
      requestBody:
        $ref: "#/components/requestBodies/StartPomodoro"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PomodoroLogStarted"
        400:
          description: Invalid request
        415:
          description: Unsupported media type
        422:
          description: Unprocessable entity
        500:
          description: Internal server error

  /end:
    post:
      requestBody:
        $ref: "#/components/requestBodies/EndPomodoro"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PomodoroLog"
        400:
          description: Invalid request
        415:
          description: Unsupported media type
        422:
          description: Unprocessable entity
        500:
          description: Internal server error

  /:
    get:
      parameters:
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
        - $ref: "#/components/parameters/project_id"
        - $ref: "#/components/parameters/include_sub_project"
        - $ref: "#/components/parameters/todo_id"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PomodoroLog"
        400:
          description: Invalid request
        500:
          description: Internal server error

  /aggregated:
    get:
      parameters:
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
        - $ref: "#/components/parameters/project_id"
        - $ref: "#/components/parameters/include_sub_project"
        - $ref: "#/components/parameters/aggregation_range"
        - $ref: "#/components/parameters/aggregate_sub_project"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AggregatedPomodoro"
        400:
          description: Invalid request
        500:
          description: Internal server error

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: TOKEN
  schemas:
    AggregatedPomodoro:
      type: array
      items:
        type: object
        properties:
          time:
            type: integer
          project_id:
            type: integer

    AggregatedPomodoroWithDatetime:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              time:
                type: integer
              project_id:
                type: integer
        datetime:
          type: string
          format: date-time

    PomodoroLogStarted:
      type: object
      properties:
        id:
          type: integer
        start:
          type: string
          format: date-time
        todo_id:
          type: integer
        project_id:
          type: integer
        parent_project_id:
          type: integer

    PomodoroLog:
      type: object
      properties:
        id:
          type: integer
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        todo_id:
          type: integer
        project_id:
          type: integer
        parent_project_id:
          type: integer
      required:
        - start
        - todo_id
        - project_id

    StartPomodoroBody:
      type: object
      properties:
        start:
          type: string
          format: date-time
        todo_id:
          type: integer
        project_id:
          type: integer
        parent_project_id:
          type: integer
      required:
        - start
        - todo_id

    EndPomodoroBody:
      type: object
      properties:
        end:
          type: string
          format: date-time
        todo_id:
          type: integer
      required:
        - end
        - todo_id

  requestBodies:
    StartPomodoro:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StartPomodoroBody"

    EndPomodoro:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EndPomodoroBody"

  parameters:
    path_date:
      name: date
      in: path
      required: true
      schema:
        type: string
        format: date
    start:
      name: start
      in: query
      required: true
      schema:
        type: string
        format: date
    end:
      name: end
      in: query
      required: true
      schema:
        type: string
        format: date
    project_id:
      name: project_id
      in: query
      schema:
        type: integer
    include_sub_project:
      name: include_sub_project
      in: query
      schema:
        type: boolean
    todo_id:
      name: todo_id
      in: query
      schema:
        type: integer
    aggregation_range:
      name: aggregation_range
      in: query
      schema:
        type: string
        enum:
          - hour
          - day
          - week
          - month
          - year
    aggregate_sub_project:
      name: aggregate_sub_project
      in: query
      schema:
        type: boolean
